
    fotoner = 100;  % Antal fotoner
    b = 1;
    % Koordinat-vektorer
    x = zeros(fotoner);  % X-koordinat
    y = zeros(fotoner);  % Y-koordinat
    z = zeros(fotoner);  % Z-koordinat
    
    % Simulerings-loop för varje foton
    for foton = 1:fotoner
        energibestamning = rand(); %Slumpar ett tal som bestämmer vilken energi fotonen får
          if 0 < energibestamning & energibestamning < 0.00854; 
                fotonenergi = 71.6;  %Olika sannolikheter för olika fotonenergier enl. sönderfallsdata
              elseif 0.00854 < energibestamning & energibestamning < 0.36354;
                fotonenergi = 113;
              elseif 0.36354 < energibestamning & energibestamning < 0.3662;
                fotonenergi = 137;
              elseif 0.3662 < energibestamning & energibestamning < 0.9762;
                fotonenergi = 208;
              elseif 0.9762 < energibestamning & energibestamning < 0.995;
                fotonenergi = 250;
              elseif 0.995 < energibestamning & energibestamning < 1;
                fotonenergi = 321;
        end
         steg = 1; %Visar vilket steg den är på
        % Alla fotoner börjar i origo
        x(foton, 1) = 0;
        y(foton, 1) = 0;
        z(foton, 1) = 0;
        
        %Måste göra så att fotonerna tar ett slumpmässigt steg i början.
         % Skapar slumpmässig riktning
            %theta = 2 * pi * rand();  % Slumpmässig vinkel mellan 0 och 2pi
            %phi = pi * rand();  % Slumpmässig vinkel mellan 0 och pi
    %steglangd = -log(rand())/0.1707;  % Steglängd. Använder massattenueringskoefficienten för vatten
    % Fotonen flyttas
            %x(foton, steg+1) = x(foton, steg) + steglangd * sin(phi) * cos(theta);
            %y(foton, steg+1) = y(foton, steg) + steglangd * sin(phi) * sin(theta);
            %z(foton, steg+1) = z(foton, steg) + steglangd * cos(phi);
           
        while fotonenergi > 5 %Sätter gränsen på 5 keV. Alltså försvinner fotonen när den har mindre energi än så
            alpha = fotonenergi/511; %alpha är fotonenergin i elektronmassor
            steglangd = -log(rand())/0.1707;  % Steglängd. Använder massattenueringskoefficienten för vatten
            %Lista från Kahn
            while b == 1 %Gör om dessa tills något krav är uppfyllt
                   R1 = rand();
                   R2 = rand();
                   R3 = rand();
          if R1 <= (2*alpha+1)/(2*alpha+9)
              eta = 2*alpha*R2;
             
              if R3 <= 4*(eta^(-1)-eta^(-2))
                  costheta = 1-2*R2;
                   b = 0;
              else
                  continue;
              end 
          elseif R1 > (2*alpha+1)/(2*alpha+9)
              eta = (2*alpha+1)/(2*R2*alpha+1);
              costheta = 1-(eta-1)/alpha;
            
              if R3 <= 0.5*(costheta^2+eta^(-1))
                  b = 0;
              end
          end 
            end
            
         
          % Skapar slumpmässig riktning
            theta = 2 * pi * rand();  % Slumpmässig vinkel mellan 0 och 2pi
            phi = pi * rand();  % Slumpmässig vinkel mellan 0 och pi
            thetaa = acos(costheta);
           
            % Fotonen flyttas
            x(foton, steg+1) = x(foton, steg) + steglangd * sin(phi) * costheta;
            y(foton, steg+1) = y(foton, steg) + steglangd * sin(phi) * sin(thetaa);
            z(foton, steg+1) = z(foton, steg) + steglangd * cos(phi);
            
            %deltaW = (0.1/0.1707)*fotonenergi;%Energin som fotonen minskar med vid varje steg
            %fotonenergi = fotonenergi-deltaW; %Fotonens nya energi
            fotonenergi = fotonenergi/eta;
            steg = steg+1;
        end 
    end

    % Plotta fotonernas rörelse i 3D
    figure;
    for foton = 1:fotoner
        plot3(x(foton, 1:steg), y(foton, 1:steg), z(foton, 1:steg), 'b.-');
        hold on;    
    end

    % Lägger en röd prick i origo
    scatter3(0, 0, 0, 25, 'r', 'filled'); % storlek = 25

    hold off;
    
    
    axis equal;
    title('Punktkälla med fotoner (3D)');
    xlabel('X-koordinat');
    ylabel('Y-koordinat');
    zlabel('Z-koordinat');
    

